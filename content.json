{"pages":[{"title":"关于Mgg","text":"大家好，我是Mgg，一个工作一年多的本科JAVA程序猿，资质平平没什么可吹嘘的。做这个博客的目的是整理与复习自己的知识，相对于看书写云笔记，自己搭个博客效果肯定更好(在不懂的朋友面前装逼哈哈哈)，如果无意中帮助到您，那可真是幸会幸会。这个博客现在用的是github的代理，后续我会把它搭到自己的服务器，然后争取也搞个微信公众号。博客内容基本自己写，不过难免有引用，如有侵权请及时邮箱联系（邮箱地址首页小信封）。 我的微信公众号我的其他站点","link":"/about/index.html"},{"title":"分类","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"JAVA零基础从入门到放弃（一）————JAVA简介","text":"虽然是复习Java知识，可能过于基础的前几个博客都没有必要写，但是本着善始善终原则，以及本身是强迫症患者，所以力求做到尽善尽美，还是写出来吧。书回正传，本篇博客将简单介绍关于JAVA的基础知识，用处不大，我尽量缩短篇幅，减少不必要的时间浪费。 了解JAVA语言一句话介绍：Java是由Sun Microsystems公司于1995年5月推出的Java面向对象程序设计语言和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。Java为什么叫”Java“,上图解释更为直观，我们只说些有趣的，百度百科几万字大概很少有人全看完：远古图片看起来辣眼睛？你们说这爪洼岛它大吗？它不是大不大，它是那种很……打住，先上一张图这是Java的logo，他看上去是一杯热气腾腾的咖啡，所以这和爪洼岛有什么关系？爪洼岛属于印尼，印尼是世界几大咖啡产地之一，爪哇岛上生产的少量Arabica原种咖啡豆，曾是世界级的优良品种。那为什么就要用”Java“来命名这门语言呢？大概Java缔造者们钟情与这种咖啡吧。听起来像那么回事哈，其实就是这么回事，只是他们原本要注册为“Ock”橡树，但是这个商标被注册了，这才有了Java。 Java诞生之初也是Internet兴起之时，在Java出现以前，几乎没有工具可以在Internet上执行动态交互程序，因此Java对Internet的发展产生了巨大的影响，Internet使Java成为网络上最流行的编程语言（确信）。（我们通常也说Java长于web）下面我们说说Java的相关知识（想到什么写什么）： Java是一种面向对象的语言（相对于C语言，C语言是面向过程的语言）； Java程序的类型是Application，即可以运行在控制台，也可以运行在图形界面； Java运行在虚拟机（JVM）中，让它成为跨平台语言，即：编写一次，随处运行；（虚拟机很吊，一定要单独学学，技术大佬必备） Java语言编写的Applet程序可以对用户的输入和操作作出响应； Applet是用Java编写，在Internet上运行的程序，可以在任何客户端系统上下载，在浏览器中运行； Java不仅适用于单机应用程序和基于网络的程序，也可用于创建消费类设备的附件程序，如移动电话、掌上设备等； 开发和运行Java程序，必须依赖和使用由Sun公司提供的Java开发工具包（Java Development Kit，我们常说的JDK）； 为适应不同的用途，又将其细分为三个版本：JavaSE（标准版，适用于普通应用程序的开发）、JavaEE（企业版，适用于大型企业级应用程序的开发）、JavaME（微型版，适用于移动设备或嵌入式设备的程序开发）。 能想到的基础点就这些，上面罗列这些每一条都有很多文章，我还是个弟弟程序猿，不能把这些牛逼的东西一一详细描述，还是要多学习啊（叹气）。 Java从1995年正式发布到现在已经过了25年了，它凭借自身的通用性、高效性、平台移植性以及安全性站在了编程语言排行榜的顶峰（2018、2019年排行数据，其实已经蝉联好几年了），Java是世界上最好的编程语言（确信233），所以为什么不学Java？ 小尾巴这是我第一篇博客，理科生也没有那么多华丽的辞藻，内容肯定也不能谈得上好，写博客这些开源框架还都是现学现卖，事实上看我博客也就图一乐，真要学习还是要找菜鸟教程，可是谁没有第一次呢，是吧（试着给自己打气）。接下来会带来环境安装与第一个Java程序”Hello world“（学习语言传统艺能）以及后续开发IDE工具介绍，待续……","link":"/2020/02/04/javabase1-jj/"},{"title":"JAVA零基础从入门到放弃（二）————Hello world!","text":"上一篇博客介绍了Java基本知识，接下来我们以在Windows上开发为例（不同的系统环境只是配置环境变量的方法不一样），正式开始Java的学习。本篇内容包含：Java开发环境配置，年轻人的第一个Java程序和Java集成开发环境（IDE）的使用。 安装Java开发和运行环境想要运行Java程序，系统需要具备Java运行环境，也就是Java Runtime Environment,简称JRE。但是如果要开发Java程序，需要的是Java Development Kit,Java程序开发工具包，也就是我们常说的JDK。一半只有服务器才会安装单独的JRE环境，开发人员需要两个都有，我们只需要去甲骨文官网下载JDK就可以，安装文件中包含了JDK和JRE。百度直接搜索“jdk”，找到甲骨文官网jdk下载页，我习惯使用jdk8,我们以jdk8的安装为例（jdk并不是越新越好，现在还有相当多的企业项目用的是jdk6,新的jdk含有新的Java规范，不同的jdk环境编译出的class文件不一样，如果开发人员jdk需要升级，服务器上的jre也要跟着升级，否则旧的环境无法运行新的规范，造成宕机，如果是重要应用，就是生产事故了。所以很多企业级应用开发人员出于稳定考虑，在当前环境满处生产需要时，不会去冒然去升级jdk版本）：然后找到版本信息，我是Win10 64位系统选择x64版本，32位系统选择i586版本（虽然64位系统可以安装32位版本，但是为了防止出现各种莫名其妙的错误，最好版本对应）下载时可能会让你登录，否者下载不开始，用邮箱注册个账号就行了（现在网络快多了，前几年下载那叫一个慢）。下载好了，开始安装（我安装的是8u181版本，小版本不一样安装没有差别）：一直点下一步就可以了（当然推荐你改一下安装位置，只要知道装在哪里就行了，后面配置环境要用）如果安装完找不到了咋办，卸载重新装，很快的这次记好了。安装完成打开Windows控制台，win+r调出运行输入cmd回车（也可以使用Win10快速检索win+q,输入cmd，需要管理员权限的控制台时这个方式更好用）输入java -version说明安装成功了，接下来我们配置环境变量，右击此电脑选择属性，选择高级系统设置，点击环境变量，在下面系统变量里新建”JAVA_HOME”和”CLASSPATH”两个变量，JAVA_HOME中的值为刚才安装Java选定的位置，我的位置是”C:\\Program Files\\Java\\jdk1.8.0_181”,复制进去保存。在CLASSPATH中输入”.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;”（复制时别复制冒号，注意开头分号前面有”.”）然后找到”Path”，点击编辑添加依次输入”%JAVA_HOME%\\bin”和”%JAVA_HOME%\\jre\\bin”保存（不同系统可能页面显示的不一样不是这种的话需要用分号隔开，这样”%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;”）修改成功后保存完成关闭面板，打开新的控制台输入”javac”回车，如果成功出现下图内容，则说明环境配置成功，接下来就可以进行开发学习了，如果不成功，请仔细检查环境变量配置步骤中的内容是否正确。 Hello world!终于可以开始敲代码了，接下来有请年轻人的第一个Java程序”Hello world!”闪亮登场（传统艺能，传统艺能……）！在本地磁盘D新建”Demo”文件夹,打开文件夹新建Hello.txt记事本文件（”.txt”是文件扩展名，如果新建记事本不显示扩展名，请百度”如何显示文件扩展名”，比较简单，这里没有截图），在记事本中输入如下代码： Hello.java12345public class Hello{ public static void main(String[] args){ System.out.println(\"Hello world!\"); }} 保存记事本然后修改扩展名为”.java”，提示可能无法使用点确定（文件名字可以不叫”Hello”,但是一定要与代码中”public class”后面的名字一模一样，注意区分大小写,代码中符号都是英文符号）。然后打开控制台进入Demo,我的在D盘，打开cmd后直接输入”d:”回车，然后”cd demo”进入demo文件夹（Windows里文件名是不区分大小写的）。输入”javac Hello.java”回车，如果代码没有错误就什么都不显示，否则会报出异常。如下图：然后我们通过”java”命令运行文件（注意不用带文件扩展名）：如图，我们成功打印出了设定内容”Hello world!”,我们第一个Java程序完成（呱唧呱唧~）。那么我们来稍微了解一下代码是怎么回事吧：有间隔的每个字段意义都不同，我来一一说明： 关键字class用来定义一个类，Hello是类的名称； 在Java程序中，所有的语句都必须放在某个类中； 整个类及其所有成员都包含在一对花括号中（即{和}之间），它们标志着类定义块的开始和结束。 定义类的一般语法：Hello.java123class 类名{ ……} 程序必须从main函数开始执行； 关键字public是访问修饰符，用来控制类成员的可见范围及作用域； 关键字static允许在不创建类的实例的情况下，调用main函数； 关键字void用来说明main函数是没有返回值的； args是字符串数组，用来从命令行接收参数； main函数的一般形式如下：Hello.java123public static void main(String[] args){ …… } String[]是字符串类型的数组； 在Java中，类名称一般首字母大写； 使用System.out.println()将信息输出到控制台上，即打印出来。解析完代码，你是否对Java代码规范有了一知半解了呢，试着修改代码按照刚才的步骤在控制台打出更多内容吧。这次我们使用上注释，注释不会被编译，有两种形式一种为“// ……”,可以注释掉同行的代码，一种是代码段注释“/……/”，注释掉一段代码（注意使用英文，当前开发环境简陋，使用中文可能导致编码异常）：Hello.java12345678910111213141516/*** This class mean to print \"Hello world!\"*/public class Hello{ public static void main(String[] args){ // print Hello world! System.out.println(\"Hello world!\"); System.out.println(\"I am Zhangsan\"); /*System .out .println(\"I am a girl\");*/ //System.out.println(\"I am a boy\"); System.out.println(\"I am a boy\"); System.out.println(\"I am 10 years old \"); }} 编译运行！通过”javadoc”命令可以将注释内容提取，生成一个文件方便查阅，来试试看：生成了一堆文件打开index.html到此为止，对Java初体验结束，初学者是不是感觉收货满满，这是是Java的冰山一角，她的众多优秀特性我们到后面再慢慢了解。集成开发环境（IDE）Java开发人员常用的开发软件有三个，分别是Eclipse、Myeclipse、Idea（剩下的都是些小众的，我也不了解）我说一说我对这三个软件的理解：EclipseEclipse轻量，简洁，操作简便，对电脑配置要求较低，并且开源免费，更适合Java初学者。缺点是简洁到几乎没有插件，后面很多开发必须插件都需要自己安装，好在eclipse提供插件支持，可以再软件里一键安装。Myeclipse它是Eclipse的定制版本，对电脑配置要求较高，而且收费，集众多生产插件于一身，免除了自己装插件的烦恼，相比eclipse功能更完善（毕竟花了钱的）。IDEA相对于先前两个，IDEA是重量级的集成开发工具，对电脑配置要求高，支持多种语言开发，拥有丰富的开源插件生态，功能相当完善，是众多开发者的首选工具，大佬必备（意义简单粗暴），这么优秀的工具肯定是需要掏钱的，官方推出了完整版和社区版（阉割版），社区版是免费的。但是在我们国内网络现在的大环境下，搜索破解方法还是相当简单的（我们这么喜欢你你竟然要收我们钱？哈哈哈……），不过在国人版权意识逐渐苏醒的今天，我呼吁有能力的开发者尽量使用正版软件（哎吆我插会儿腰……嘿嘿嘿）。开发工具介绍完毕，作为Java初学者建议使用eclipse，虽然一步到位使用IDEA更好，但是IDEA相对来说对电脑配置要求高，如果配置跟不上会卡顿，严重影响开发体验，撇去性能不谈，IDEA自动保存，但是没有自动编译，需要手动编译（虽然可以自己设置自动编译，但我劝你别），eclipse点击保存的时候自动编译。所以等以后碰到语言多了，比如学习Spring boot或者开发项目需要同时操作好几门语言，这时候一个IDEA就可以完全搞定了。好了开发工具搞定，我们顺便在eclipse上撸个”Hello world!”吧。 在eclipse上运行Hello world安装eclipse需要验证环境变量，如果环境变量没安装好，eclipse无法正常安装，下载地址。安装过程（这种种边下载边安装的形式，耐心等待安装完成，也可以点击下载页下载按钮地下的 Download Packages 整包下载）：安装完成首次打开会让你选择工作空间，也就是你的项目要放的目录,默认或自己设都行。进入界面点击工具栏File&gt;new&gt;java project(如果没有选择project然后搜索java project)&gt;填写项目信息&gt;完成，如图：若遇到弹窗提示点Ok就可以了。点开工程&gt;右击src&gt;new&gt;class&gt;填写类信息&gt;finish打开Demo类在光标处敲入System.out.println(“Hello world!”); 保存，代码正确会自动编译，代码错误会有提示，没有错误点运行。运行成功 以上是这篇博客的全部内容，从环境变量配置到集成环境运行代码都很顺利，初学者如果哪里有不懂，欢迎邮件交流，感谢您的阅读。 小尾巴写博客是真的累，坐了一下午，不过程序员就要坐的住，哈哈，前期工作都已完成，接下来开始学习Java正经内容，待续……","link":"/2020/02/05/javabase2-helloworld/"},{"title":"JAVA零基础从入门到放弃（三）————标识符与关键字、常量与变量、作用域、数据类型和类型转换","text":"本篇内容包括Java语言中标识符、关键字、常量、变量和数据类型的讲解，学任何一门语言，这些内容都是最基础也是最重要的，就像盖房子，不同的材料有不同的用处，让材料物尽其用才能盖好房子。实践是检验真理的唯一标准，学知识就要多实践，学计算机语言就要多敲代码，只有这样知识才能学得会，记得牢，技巧也用的熟。 标识符与关键字标识符标识符分为两类，分别为关键字和用户自定义标识符。 关键字是有特殊含义的标识符，如 true、false 表示逻辑的真假。 用户自定义标识符是由用户按标识符构成规则生成的非保留字的标识符，如 abc 就是一个标识符。提个醒：使用标识符时一定要注意，或者使用关键字，或者使用自定义的非关键字标识符。此外，标识符可以包含关键字，但不能与关键字重名。Java中标识符用来定义方法、变量或者其他用户自定义的名称，它可以是一个字符，也可以是一个字符串。构成规则如下： 标识符由数字（0-9）和字母（A-Z 和 a-z）、美元符号（$）、下划线（_）以及 Unicode 字符集中符号大于 0xC0 的所有符号组合构成（各符号之间没有空格）。 标识符的第一个符号为字母、下划线和美元符号，后面可以是任何字母、数字、美元符号或下划线，不可以用数字开头。 Java语言中区分大小写，例如boy与Boy是两个不同的字符串提个醒：标识符是变量、类名、方法名的命名，命名提倡给予标识符正确含义，如定义两个男孩可以用boy_1与boy_2，不提倡用a、b定义（要养成好习惯，初学C语言深受老谭毒害）关键字关键字是说这个标识符有特定的用处，不能随便拿来用，如上图不能用“true”做变量名。每个jdk版本里关键字的数量是一定的，不同的jdk中关键字的数量可能不同。下面列举常见关键字： 数据类型：boolean、int、long、short、byte、float、double、char、class、interface。 流程控制：if、else、do、while、for、switch、case、default、break、continue、return、try、catch、finally。 修饰符：public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native。 动作：package、import、throw、throws、extends、implements、this、supper、instanceof、new。 保留字：true、false、null、goto、const。提个醒：虽然有区分大小写，但是也尽量不要用“Public”、“True”等类似标识符，容易产生歧义。 常量与变量常量和常量值常量就是不变的量，常量值是常量的值（解释的很蠢，但是就是这个意思）。代码中可以使用定义过的常量，也可以直接使用常量值。定义常量的方法就是在类型前面加关键字“final”。下面练习定义常量和认识常量值。 整型常量值，按进制分八进制、十进制、十六进制定义方法直接上图：整型（int）常量默认在内存中占 32 位，是具有整数类型的值，当运算过程中所需值超过 32 位长度时，可以把它表示为长整型（long）数值。长整型类型则要在数字后面加L或1，如697L表示一个长整型数，它在内存中占 64 位。 实型常量值，两种形式，十进制型小数点形式如9.9，科学计数法如1.1e5或10&amp;E3,其中 e 之前必须有数字，且 e 之后的数字必须为整数。注意：小数定义有单精度和双精度只分，单精度在末尾要加上 f 。 布尔类型常量值，true or false ，只有这两个值。 字符型和字符串型常量值，字符型如“A，a”,字符串型如“boy,girl”,还有一种转义字符，比如换行符“\\n”：下面列举出常用转移符：变量Java中变量的使用有特定规则，必须先声明后使用，指定类型的变量只能接收该类型的值。声明变量的方法为 [数据类型 变量名 = 值]（例如 String boy = “kangkang”，也可以是 [数据类型 变量名],如 String boy; ）。在上面说各类型常量值的时候已经用到了变量声明；声明变量要依据声明类型的类方法，比如String类型就有多种声明方法，这就需要查Java API文档点开对应类，去研究研究这个类究竟有多少使用方法，Java提供了官方文档，有在线也有离线版，使用方法很简单，即使不懂，百度很容易就解决了。举个栗子：以后碰到不懂得类，可以翻翻api文档，知识学的很快的，变大佬必备。变量标识符的命名规范如下： 首字符必须是字母、下划线（―）、美元符号（$）或者人民币符号（¥）。 标识符由数字（0-9）、大写字母（A-Z）、小写字母（a-z）、下划线（―）、美元符号（$）、人民币符号（¥）以及所有在十六进制 0xc0 前的 ASCII 码组成。 不能把关键字、保留字作为标识符。 标识符的长度没有限制。 标识符区分大小写。Java 中初始化变量时需要注意以下事项： 变量是类或者结构中的字段，如果没有显式地初始化，默认状态下创建变量并默认初始值为 0。 方法中的变量必须显式地初始化，否则在使用该变量时就会出错。 作用域作用域界定了声明变量的使用范围，在Java中认准花括弧”{}”就行。在括弧内声明的变量只能在括弧内使用。根据作用域的不同，把变量分为成员变量和局部变量（当然这都是概念知识，敲多了自然懂）。 成员变量成员变量包含全局变量和静态变量：撸个代码看一下如何调用两种变量 Hello.java1234567public class Boy { /*以下都是Boy类里的成员变量*/ public String name;//boy 姓名 （实例变量） public int age;//年龄 （实例变量） public final static String home = \"Hebei\";//家庭住址 静态常量（类变量） public static String tel = \"8888-6666666\";//电话 静态变量（类变量）} 编个测试类看一下 Hello.java1234567891011121314151617public class Test { public static void main(String[] args) { // TODO Auto-generated method stub Boy boy1 = new Boy();//将Boy类实例化为boy1 //实例变量必须用实例调用(全局变量) System.out.println(boy1.name); System.out.println(boy1.age); //实例.变量名 调用类变量(类变量) System.out.println(boy1.home); System.out.println(boy1.tel); //类变量不用实例化对象也可以直接 类.变量(类变量) System.out.println(Boy.home); System.out.println(Boy.tel); }} 运行结果全局变量有默认初始值，static final修饰的变量必须赋予初始值，类变量的方便之处就是不用实例化对象，直接用[类.变量名]调用。 局部变量局部变量是指在方法或者方法代码块中定义的变量，其作用域是其所在的代码块。可分为以下三种： 方法参数变量（形参）：在整个方法内有效。 方法局部变量（方法内定义）： 从定义这个变量开始到方法结束这一段时间内有效。 代码块局部变量（代码块内定义）：从定义这个变量开始到代码块结束这一段时间内有效。 局部变量在使用前必须被程序员主动初始化值。 方法局部变量Hello.java1234567891011121314public class Test { public static void main(String[] args) { // TODO Auto-generated method stub int i = 3,j = 4; if (i &gt; 2) { System.out.println(\"i=\"+i); System.out.println(\"j=\"+j); } System.out.println(\"i=\"+i); System.out.println(\"j=\"+j); }} 方法参数变量Hello.java123456789101112131415public class Test { public static void main(String[] args) { // TODO Auto-generated method stub //调用方法 Test.add(1); } public static void add(int i)//方法参数变量 { int j = 10;//方法局部变量 System.out.println(\"i+j=\"+i+j); }} 代码块局部变量Hello.java123456789101112131415161718public class Test { public static void main(String[] args) { // TODO Auto-generated method stub // 调用方法 Test.test(1); } public static void test(int i) {// 方法参数变量 try {// 使用try catch 代码块 异常处理代码块，后面异常篇再详细说 int j = 10;代码块 局部变量 System.out.println(\"i+j=\" + i + j); } catch (Exception e) {// 异常处理块，参数为 Exception 类型 e.printStackTrace(); } }} 作用域讲完了，是不是很简单，看准”{}”，多练比看概念要好得多。 数据类型Java中数据类型分为基本型和引用型我们用几张图就能搞定了，多用就能记住，不要死记硬背： 基本型基本数据类型可分为 4 大类，即整数类型（包括 byte、short，int 和 long）、浮点类型（包括 float 和 double）、布尔类型和字符类型（char）：Java 定义了 4 种整数类型变量：字节型（byte）、短整型（short）、整型（int）和长整型（long）。这些都是有符号的值，正数或负数。具体说明看图：根据要求使用合适的类型，严格按照变量声明方式，Java中没有无类型变量，不再举例，上面的变量声明练习足够了，可以试着自己把所有类型敲一下。 引用型引用数据类型建立在基本数据类型的基础上，包括数组、类和接口。引用数据类型是由用户自定义，用来限制其他数据的类型。另外，Java 语言中不支持 C++ 中的指针类型、结构类型、联合类型和枚举类型。引用类型还有一种特殊的 null 类型。所谓引用数据类型就是对一个对象的引用，对象包括实例和数组两种。实际上，引用类型变量就是一个指针，只是 Java 语言里不再使用指针这个说法。空类型（null type）就是 null 值的类型，这种类型没有名称。因为 null 类型没有名称，所以不可能声明一个 null 类型的变量或者转换到 null 类型。空引用（null）是 null 类型变量唯一的值。空引用（null）可以转换为任何引用类型。在实际开发中，程序员可以忽略 null 类型，假定 null 只是引用类型的一个特殊直接量（不听不听和尚念经……）。注意：空引用（null）只能被转换成引用类型，不能转换成基本类型，因此不要把一个 null 值赋给基本数据类型的变量。 数据类型转换分隐式转换与显示转换两种。 隐式转换如果以下 2 个条件都满足，那么将一种类型的数据赋给另外一种类型变量的时，将执行自动类型转换： 两种数据类型彼此兼容 目标类型的取值范围大于源数据类型（低级类型数据转换成高级类型数据）例如 byte 类型向 short 类型转换时，由于 short 类型的取值范围较大，会自动将 byte 转换为 short 类型。在运算过程中，由于不同的数据类型会转换成同一种数据类型，所以整型、浮点型以及字符型都可以参与混合运算。自动转换的规则是从低级类型数据转换成高级类型数据。转换规则如下： 数值型数据的转换：byte→short→int→long→float→double。 字符型转换为整型：char→int。以上数据类型的转换遵循从左到右的转换顺序，最终转换成表达式中表示范围最大的变量的数据类型，举个栗子。Hello.java123456789public static void main(String[] args) { // TODO Auto-generated method stub float price1 = 10.5f; // 定义牙膏的价格 double price2 = 3.5; // 定义面巾纸的价格 int num1 = 4; // 定义牙膏的数量 int num2 = 5; // 定义面巾纸的数量 double res = price1 * num1 + price2 * num2; // 计算总价 System.out.println(\"一共付了\" + res + \"元\"); // 输出总价 } 看起来很高级，但并不是所有类型都这么好用：那么现在就用到显示转换了。显式转换当两种数据类型不兼容，或目标类型的取值范围小于源类型时，自动转换将无法进行，这时就需要进行强制类型转换。我们把上面没转好的转一下：再举个例子，我们上面去买牙膏用的浮点型算的钱，现在我们只关心花了多少块，不关心几毛钱了。Hello.java123456789public static void main(String[] args) { // TODO Auto-generated method stub float price1 = 10.5f; // 定义牙膏的价格 double price2 = 3.5; // 定义面巾纸的价格 int num1 = 4; // 定义牙膏的数量 int num2 = 5; // 定义面巾纸的数量 int res = (int)(price1 * num1 + price2 * num2); // 计算总价 System.out.println(\"一共付了\" + res + \"元\"); // 输出总价 } 小尾巴腰好疼，一坐就是三个小时，还是要多锻炼肾体啊。","link":"/2020/02/06/javabase3-bsfgjzclbltj/"}],"tags":[{"name":"Java","slug":"Java","link":"/tags/Java/"}],"categories":[{"name":"Java基础学习","slug":"Java基础学习","link":"/categories/Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"}]}